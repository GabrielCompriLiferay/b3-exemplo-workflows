name: Build and Publish

on:
  workflow_call:
    inputs:
      WORKSPACE_REPOSITORY:
        type: string
        required: true
      WORKSPACE_OWNER_REPOSITORY:
        type: string
        required: true
      WORKSPACE_REPOSITORY_BRANCH:
       type: string
       required: true
      
      MODULE_FULL_VERSION:
        type: string
        required: true
      MODULE_ONLY_VERSION:
        type: string
        required: true
      MODULE_SUFFIX:
        type: string
        
      BRANCH_PRD:
        type: string
        required: true
      BRANCH_HOMOLOGATION:
        type: string
        required: true
      BRANCH_DEVELOP:
        type: string
        required: true
        
    secrets:
      USER:
        required: true
      TOKEN:
        required: true

permissions:
  contents: read

jobs:

   build-and-publish:

    runs-on: ubuntu-22.04
    
    env:
      MODULE_FULL_VERSION: ${{ inputs.MODULE_FULL_VERSION }}
      MODULE_ONLY_VERSION: ${{ inputs.MODULE_ONLY_VERSION }}
      MODULE_SUFFIX: ${{ inputs.MODULE_SUFFIX }}
      
      PLATFORM_BOM_REPOSITORY: "GabrielCompriLiferay/platform-b3-boms"
            
      ENVIRONMENT_BRANCH_PRD: prd
      ENVIRONMENT_BRANCH_HOMOLOGATION: uat
      ENVIRONMENT_BRANCH_DEVELOP: local dev
      
      GROUP_ID: "br.com.b3"
      
      BRANCH_PRD: ${{ inputs.BRANCH_PRD }}
      BRANCH_HOMOLOGATION: ${{ inputs.BRANCH_HOMOLOGATION }}
      BRANCH_DEVELOP: ${{ inputs.BRANCH_DEVELOP }}
      
      WORKSPACE_OWNER_REPOSITORY: ${{ inputs.WORKSPACE_OWNER_REPOSITORY }}
      WORKSPACE_REPOSITORY: ${{ inputs.WORKSPACE_REPOSITORY }}
      WORKSPACE_REPOSITORY_BRANCH: ${{ inputs.WORKSPACE_REPOSITORY_BRANCH }}
      
      USER: ${{ secrets.USERNAME }}
      TOKEN: ${{ secrets.TOKEN }}
      
    steps:
    
    # - name: free disk space
    #   run: |
    #     sudo swapoff -a
    #     sudo rm -f /swapfile
    #     sudo apt clean
    #     docker rmi $(docker image ls -aq)
    #     df -h
    
    - name: ShowSpace
      run: |
        echo "Free space:"
        df -h
    
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
        
    - name: ShowSpace
      run: |
        echo "Free space:"
        df -h

    - name: Setup Java JDK
      uses: actions/setup-java@v3.10.0
      with:
        java-version: '8'
        distribution: zulu
    
    - name: Clone workspace
      uses: actions/checkout@v3
      with:
        repository: ${{ env.WORKSPACE_OWNER_REPOSITORY }}/${{ env.WORKSPACE_REPOSITORY }}
        ref: ${{ env.WORKSPACE_REPOSITORY_BRANCH }}
        path: b3-exemplo-cloud
        token: ${{ secrets.TOKEN }}
        
    - name: Set up liferay workspace
      run: |
        mkdir -p liferay-workspace
        cp -r b3-exemplo-cloud/liferay/* liferay-workspace
        
    - name: Clear modules and Themes
      continue-on-error: true
      run: |
        rm -rf liferay-workspace/themes/*
        rm -rf liferay-workspace/modules/*
        
    - name: Set platform Enviroment
      id: platformBom
      run: |
        case "${{ github.ref_name }}" in
          $BRANCH_PRD)
            platformBom="platform-b3-boms"
            ;;
          $BRANCH_HOMOLOGATION)
            platformBom="platform-b3-boms-uat"
            ;;
          $BRANCH_DEVELOP)
            platformBom="platform-b3-boms-dev"
            ;;
          *)
            exit 1
            ;;
        esac
        
        echo "platformBom=$platformBom" >> $GITHUB_OUTPUT
        
    - name: Clone Module ${{ github.event.repository.name }}
      uses: actions/checkout@v3
      with:
        path: liferay-workspace/modules/${{ github.event.repository.name }}
              
    - name: Build module
      env:
        PLATFORM_BOM: ${{ steps.platformBom.outputs.platformBom }}`
      working-directory: liferay-workspace
      run: ./gradlew deploy -x test -Pb3.platform.name=$PLATFORM_BOM -Pb3.platform.version=+
    
    - name: Publish module
      env:
        PLATFORM_BOM: ${{ steps.platformBom.outputs.platformBom }}
      working-directory: liferay-workspace
      run: ./gradlew publish -x test -Pb3.platform.name=$PLATFORM_BOM -Pb3.platform.version=+
      
    - name: Rename files in deploy folder
      working-directory: liferay-workspace/build/docker/deploy
      run: |
        for filename in *
        do
          if [[ $filename =~ \-[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            pattern=${BASH_REMATCH[0]}
            new_filename=$(echo $filename | sed "s/$pattern//")
            mv $filename $new_filename
          fi
        done

    - name: move binaries files to deploy
      run: | 
        environment=""
        case "${{ github.ref_name }}" in

          $BRANCH_PRD)
            environment=$ENVIRONMENT_BRANCH_PRD
            echo "environment: PRD"
            ;;
          $BRANCH_HOMOLOGATION)
            environment=$ENVIRONMENT_BRANCH_HOMOLOGATION
            echo "environment: HOMOLOGATION"
            ;;
          $BRANCH_DEVELOP)
            environment=$ENVIRONMENT_BRANCH_DEVELOP
            echo "environment: DEVELOP"
            ;;
          *)
            exit 1
            ;;
        esac
        
        for folder in $environment
        do
          cp -v liferay-workspace/build/docker/deploy/* b3-exemplo-cloud/liferay/configs/$folder/deploy
          echo "files moved to /$folder"
        done
        
    - name: update local repository
      working-directory: b3-exemplo-cloud
      run: |
          git pull origin $WORKSPACE_REPOSITORY_BRANCH
          
    - name: push to b3-exemplo-cloud
      working-directory: b3-exemplo-cloud
      run: |
          git config user.name BotDeploy
          git config user.email BotDeploy@github.com
          git add .
          git commit -m "Module: ${{ github.event.repository.name }}-$MODULE_FULL_VERSION deploy"
          git push

    - name: Clone platform-b3
      uses: actions/checkout@v3
      with:
        repository: GabrielCompriLiferay/platform-b3-boms
        path: platform-b3-boms
        token: ${{ secrets.TOKEN }}
          
    - name: Generate Bom References
      id: modulesArray
      run: | 
        jsonFileDir="modules.json"
        modulesFolder="liferay-workspace/build/docker/deploy"
        
        touch $jsonFileDir
        echo "[]" > $jsonFileDir

        artifacts=""
        for file in $(ls -r $modulesFolder)
        do
          if [ "${file##*.}" != "jar" || "${file##*.}" != 'war' ] 
          then
            exit 1
          fi
          newfile="${file%.*}"
          artifacts+="$newfile " 
        done
        
        for file in $artifacts
        do
          echo "file: $file | condition: $condition"
            jq -r --arg moduleValue $file '. += [ $moduleValue ]' $jsonFileDir > $jsonFileDir.temp && mv $jsonFileDir.temp $jsonFileDir
            echo "create object"
        done
        
        echo $(cat $jsonFileDir)
        jsonn="$(cat $jsonFileDir)"
        json_str=$(echo $jsonn | jq -c '.')
        echo "modulesArray=$json_str" >> $GITHUB_OUTPUT
                
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v2.1.1
      with:
        token: ${{ secrets.TOKEN }}
        repository: ${{ env.PLATFORM_BOM_REPOSITORY }}
        event-type: publish-bom
        client-payload: '{"repositoryName": "${{ github.event.repository.name }}", "moduleVersion": "${{ env.MODULE_FULL_VERSION }}", "group": "${{ env.GROUP_ID }}", "branch": "${{ github.ref_name }}", "modules": ${{ steps.modulesArray.outputs.modulesArray }}}'        
 
